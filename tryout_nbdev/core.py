# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['say_hello', 'Say']

# Cell
from typing import Callable, Any, Optional

# Cell
def say_hello(to):
    """Say hello to someone (or the whole world)."""
    return f"Hello {to}!"

# Cell
class Say:
    """Say something to someone."""
    def __init__(self, channel: "Optional[Callable[[str], Any]]" = None, **kwargs) -> Any:
        self._channel = channel
        self._from = kwargs.get("from_", None)
        self._to = kwargs.get("to", None)
        self._msg = kwargs.get("msg", None)

    def __str__(self) -> str:
        header = ""
        if self._from or self.to:
            from_s = self._from or "Nobody"
            to_s = self._to or "All"
            header = f"{from_s} -> {to_s}: "
        message = self._msg or "..."
        return f"{header}{message}"

    def from_(self, from_: str) -> "Say":
        """Edit who the message is from."""
        self._from = from_
        return self

    def to(self, to: str) -> "Say":
        """Edit who the message is to."""
        self._to = to
        return self

    def __call__(self, message: "Optional[str]" = None) -> "Any":
        """Say the message on the configured channel."""
        self._msg = message or self._msg
        if self._channel is not None:
            return self._channel(str(self))
        return str(self)